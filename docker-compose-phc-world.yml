version: '2'
services:
  # mariadb:
  #   image: mariadb
  #   container_name: mariadb
  #   ports:
  #     - 3306:3306
  #   environment:
  #     MARIADB_DATABASE: mydb
  #     MARIADB_ROOT_PASSWORD: root
  mysql:    
    image: mysql
    container_name: mysql
    networks:
      - phc-world
    command: 
      - --character-set-server=utf8mb4 
      - --collation-server=utf8mb4_unicode_ci 
      # - --default-authentication-plugin=mysql_native_password 
      - --lower_case_table_names=1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test
      MYSQL_ROOT_HOST: "%"
      TZ: Asia/Seoul
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - phc-world
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.5.3
    hostname: broker
    container_name: broker
    networks:
      - phc-world
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  kafka-connect:
    # image: confluentinc/cp-kafka-connect:7.5.3
    image: javamogi/kafka-connect
    container_name: kafka-connect
    networks:
      - phc-world
    depends_on:
      - broker
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
    volumes:
      # - C:\Users\user\Documents\docker\kafka\maria:/etc/kafka-connect/jars
      - C:\Users\user\Documents\docker\kafka\mysql:/etc/kafka-connect/jars
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.7.4
        confluent-hub install --no-prompt debezium/debezium-connector-mysql:2.2.1
        /etc/kafka/scripts/start.sh
  rabbitmq:
    container_name: rabbitmq
    networks:
      - phc-world
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
  config-service:
    container_name: config-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - phc-world
    image: javamogi/config-service:1.0
    ports:
      - 8888:8888
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.profiles.active: default
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://config-service:8888/actuator/health"]
      # test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://config-service:8888/actuator/health"]
    # healthcheck:
    #   test: ["CMD", "curl", "--fail", "http://config-service:8888/actuator/health"]
    #   interval: 1m30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 60s
  discovery-service:
    container_name: discovery-service
    depends_on:
      - config-service
    networks:
      - phc-world
    image: javamogi/discovery-service:1.0
    ports:
      - 8761:8761
    environment:
      spring.cloud.config.uri: http://config-service:8888
      spring.cloud.rabbitmq.host: rabbitmq
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://discovery-service:8761/actuator/health"]
      # interval: 1m30s
      # timeout: 30s
      # retries: 5
      # start_period: 60s
  gateway-service:
    container_name: gateway-service
    depends_on:
      config-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    image: javamogi/gateway-service:1.1
    networks:
      - phc-world
    ports:
      - 8000:8000
    environment:
      spring.cloud.config.uri: http://config-service:8888
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
      spring.rabbitmq.host: rabbitmq
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://gateway-service:8000/actuator/health"]
      # test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://gateway-service:8888/actuator/health"]
      # interval: 1m30s
      # timeout: 30s
      # retries: 5
      # start_period: 60s
  user-service:
    container_name: user-service
    depends_on:
      mysql:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
    # command: ["java", "-jar", "UserService.jar"]
    image: javamogi/user-service:1.1
    networks:
      - phc-world
    environment:
      spring.cloud.config.uri: http://config-service:8888
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
      spring.rabbitmq.host: rabbitmq
      kafka.broker.url: "broker:29092"
      spring.datasource.url: "jdbc:mysql://mysql:3306/test?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8"
      gateway.ip: gateway-service
  board-service:
    container_name: board-service
    depends_on:
      mysql:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
    # command: ["java", "-jar", "UserService.jar"]
    image: javamogi/board-service:1.1
    networks:
      - phc-world
    environment:
      spring.cloud.config.uri: http://config-service:8888
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
      spring.rabbitmq.host: rabbitmq
      kafka.broker.url: "broker:29092"
      spring.datasource.url: "jdbc:mysql://mysql:3306/test?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8"
  answer-service:
    container_name: answer-service
    depends_on:
      mysql:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
    # command: ["java", "-jar", "UserService.jar"]
    image: javamogi/answer-service:1.1
    networks:
      - phc-world
    environment:
      spring.cloud.config.uri: http://config-service:8888
      eureka.client.service-url.defaultZone: http://discovery-service:8761/eureka
      spring.rabbitmq.host: rabbitmq
      kafka.broker.url: "broker:29092"
      spring.datasource.url: "jdbc:mysql://mysql:3306/test?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8"
networks:
  phc-world:
